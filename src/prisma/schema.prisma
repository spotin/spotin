generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Spot {
  id          String    @id @default(uuid())
  title       String?   @db.VarChar(255)
  description String?
  latitude    Float?    @db.DoublePrecision
  longitude   Float?    @db.DoublePrecision
  redirection String?   @db.VarChar(255)
  referenced  Boolean   @default(false)
  configured  Boolean   @default(true)
  // userId      String?   @map(name: "user_id")
  createdAt   DateTime  @default(now()) @map(name: "created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @map(name: "updated_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map(name: "deleted_at") @db.Timestamptz(6)

  // users User? @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map(name: "spots")
}

// model Token {
//   id        String    @id @default(uuid())
//   hash      String    @db.VarChar(255)
//   name      String?   @db.VarChar(255)
//   userId    String?   @map(name: "user_id")
//   createdAt DateTime  @default(now()) @map(name: "created_at") @db.Timestamptz(6)
//   updatedAt DateTime  @default(now()) @map(name: "updated_at") @db.Timestamptz(6)
//   deletedAt DateTime? @map(name: "deleted_at") @db.Timestamptz(6)
//   users     User?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

//   @@map(name: "tokens")
// }

// model User {
//   id            String    @id @default(uuid())
//   username      String    @unique @db.VarChar(255)
//   email         String?   @db.VarChar(255)
//   password      String?   @db.VarChar(255)
//   confirmed     Boolean?  @default(false)
//   createdAt     DateTime  @default(now()) @map(name: "created_at") @db.Timestamptz(6)
//   updatedAt     DateTime  @default(now()) @map(name: "updated_at") @db.Timestamptz(6)
//   deletedAt     DateTime? @map(name: "deleted_at") @db.Timestamptz(6)
//   validateEmail String?   @map(name: "validate_email") @db.VarChar(255)
//   resetPassword String?   @map(name: "reset_password") @db.VarChar(255)
//   spots         Spot[]
//   tokens        Token[]

//   @@index([resetPassword], map: "users_reset_password")
//   @@index([validateEmail], map: "users_validate_email")
//   @@map(name: "users")
// }
