{% extends "layout.njk" %}
{% block body %}
  <h1>
    <i class="fas fa-user"></i>
    {{ profile.username }}
  </h1>
  <p>
    {{ t('ui.profile.view.memberSince', { date: profile.createdAt }) }}
  </p>
  <p>
    {{ t('ui.profile.view.numberOfPublicSpots', { count: profile.spotsStatistics.count }) }}
  </p>
  <div id='map' style='width: 100%; height: 400px;'></div>
{% endblock %}

{% block javascript %}
  <script>
    const longitudeMin = {{ profile.spotsStatistics.longitude.min }};
    const longitudeMax = {{ profile.spotsStatistics.longitude.max }};
    const latitudeMin = {{ profile.spotsStatistics.latitude.min }};
    const latitudeMax = {{ profile.spotsStatistics.latitude.max }};

    if (longitudeMin && longitudeMax && latitudeMin && latitudeMax) {
      // https://codepen.io/bothness/pen/ExgwzEG
      const mapGlStyle = {
        version: 8,
        sources: {
          osm: {
            type: 'raster',
            tiles: ['https://a.tile.openstreetmap.org/{z}/{x}/{y}.png'],
            tileSize: 256,
            attribution: '&copy; OpenStreetMap Contributors',
            // https://wiki.openstreetmap.org/wiki/Zoom_levels#Mapbox_GL
            maxzoom: 19
          }
        },
        layers: [
          {
            id: 'osm',
            type: 'raster',
            source: 'osm'
          }
        ]
      };

      const map = new maplibregl.Map({container: 'map', style: mapGlStyle});

      map.fitBounds([
        longitudeMin, latitudeMin, longitudeMax, latitudeMax
      ], {padding: 60});

      {% for spot in profile.spots %}
        new maplibregl
          .Marker({color: "#e53935"})
          .setLngLat([{{ spot.longitude }}, {{ spot.latitude }}])
          .addTo(map);
      {% endfor %}
    }
  </script>
{% endblock %}
