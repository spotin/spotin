{% extends "layout.njk" %}
{% block body %}
  <h1>
    <span class="fas fa-user"></span>
    {{ t('ui.profile.edit.title') }}
  </h1>
  <form id="form">
    <fieldset>
      <label for="username">
        {{ t('ui.profile.edit.username.label') }}
      </label>
      <input name="username" id="username" placeholder="{{ t('ui.profile.edit.username.placeholder') }}" value="{{ username }}" autofocus="autofocus">

      <label for="email">
        {{ t('ui.profile.edit.email.label') }}
      </label>
      <input type="email" name="email" id="email" value="{{ email }}" autofocus="autofocus" readonly="readonly">
      <small>
        {{ t('ui.profile.edit.email.note') }}
      </small>

      <label for="bio">
        {{ t('ui.profile.edit.bio.label') }}
      </label>
      <textarea id="bio" type="text" name="bio" rows="15" placeholder="{{ t('ui.profile.edit.bio.placeholder') }}">{{ bio }}</textarea>
      <small>
        <span class="fab fa-markdown"></span>
        {{
        t('ui.profile.edit.bio.note', {
          markdown: '<a href="https://www.markdownguide.org" target="_blank" rel="noopener noreferrer">Markdown</a>',
          markdownIt: '<a href="https://www.npmjs.com/package/markdown-it" target="_blank" rel="noopener noreferrer">markdown-it</a>',
          markdownItAttrs: '<a href="https://www.npmjs.com/package/markdown-it-attrs" target="_blank" rel="noopener noreferrer">markdown-it-attrs</a>'
        })|safe
      }}
      </small>

      <label for="current-password">
        {{ t('ui.profile.edit.currentPassword.label') }}
      </label>
      <input type="password" name="current-password" id="current-password" placeholder="{{ t('ui.profile.edit.currentPassword.placeholder') }}" autofocus="autofocus" required="required">

      <label for="new-password">
        {{ t('ui.profile.edit.newPassword.label') }}
      </label>
      <input type="password" name="new-password" id="new-password" placeholder="{{ t('ui.profile.edit.newPassword.placeholder') }}" autofocus="autofocus">
    </fieldset>
    <div id="success"></div>
    <div id="errors"></div>
    <a href="/profile/{{ username }}">
      <button type="button">
        <span class="fas fa-eye"></span>
        {{ t('ui.profile.edit.actions.view') }}
      </button>
    </a>

    <button type="submit">
      <span class="fas fa-edit"></span>
      {{ t('ui.profile.edit.actions.update') }}
    </button>
  </form>
{% endblock %}

{% block javascript %}
  <script>
    const form = document.getElementById("form");
    const success = document.getElementById("success");
    const errors = document.getElementById("errors");

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      // Remove aria-invalid from all fields
      document
        .querySelectorAll('[aria-invalid]')
        .forEach((elem) => {
          elem.setAttribute('aria-invalid', 'false');
        });

      success.innerHTML = "";
      errors.innerHTML = "";

      // Get the form data
      const username = document.getElementById("username");
      const bio = document.getElementById("bio");
      const currentPassword = document.getElementById("current-password");
      const newPassword = document.getElementById("new-password");

      const body = JSON.stringify({
        username: username.value || undefined,
        bio: bio.value || null,
        currentPassword: currentPassword.value || undefined,
        newPassword: newPassword.value || undefined
      });

      const response = await fetch("/api/profile", {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json"
        },
        body
      });

      if (response.ok) {
        success.innerHTML += "<p class=\"success\">You have successfully updated your profile.<p>";
      } else {
        await manageErrors(response, errors);
      }
    });
  </script>
{% endblock %}
