{% extends "layout.njk" %}
{% block body %}
  <h2>
    <i class="fas fa-users"></i>
    {{ t('ui.users.form.title') }}
  </h2>
  <form id="form">
    <fieldset>
      <input type="hidden" name="id" id="id" value="{{ user.id }}">

      <label for="username">
        {{ t('ui.users.form.username.label') }}
      </label>
      <input name="username" id="username" placeholder="{{ t('ui.users.form.username.placeholder') }}" value="{{ user.username }}" autofocus="autofocus" required="required"/>

      <label for="email">
        {{ t('ui.users.form.email.label') }}
      </label>
      <input type="email" name="email" id="email" placeholder="{{ t('ui.users.form.email.placeholder') }}" value="{{ user.email }}" autofocus="autofocus" required="required">

      <label for="role">
        {{ t('ui.users.form.role.label') }}
      </label>
      <select id="role" name="role" required="required">
        <option value="STANDARD_USER" {{ 'selected' if user.role == "STANDARD_USER" }}>
          {{ t('ui.users.form.role.values.standardUser') }}
        </option>
        <option value="CERTIFIED_USER" {{ 'selected' if user.role == "CERTIFIED_USER" }}>
          {{ t('ui.users.form.role.values.certifiedUser') }}
        </option>
        <option value="ADMIN" {{ 'selected' if user.role == "ADMIN" }}>
          {{ t('ui.users.form.role.values.admin') }}
        </option>
      </select>

      <label for="enabled">
        {{ t('ui.users.form.enabled.label') }}
      </label>
      <select id="enabled" name="enabled" required="required">
        <option value="true" {{ 'selected' if not user or user.enabled }}>
          {{ t('ui.users.form.enabled.values.true') }}
        </option>
        <option value="false" {{ 'selected' if user and not user.enabled }}>
          {{ t('ui.users.form.enabled.values.false') }}
        </option>
      </select>
    </fieldset>
    <div id="success"></div>
    <div id="errors"></div>
    <button id="button" name="button" type="submit">
      <i class="fas fa-save"></i>
      {{ t('ui.users.form.button') }}
    </button>
  </form>
{% endblock %}

{% block javascript %}
  <script>
    const form = document.getElementById("form");
    const success = document.getElementById("success");
    const errors = document.getElementById("errors");

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      // Remove aria-invalid from all fields
      document
        .querySelectorAll('[aria-invalid]')
        .forEach((elem) => {
          elem.setAttribute('aria-invalid', 'false');
        });

      success.innerHTML = "";
      errors.innerHTML = "";

      // Get the form data
      const username = document.getElementById("username");
      const email = document.getElementById("email");
      const role = document.getElementById("role");
      const enabled = document.getElementById("enabled");

      const body = JSON.stringify({
        username: username.value || undefined,
        email: email.value || undefined,
        role: role.value,
        enabled: enabled.value === "true"
      });

      let endpoint = "/api/users";
      let method = "POST";

      if (id.value) {
        endpoint += `/${id.value}`;
        method = "PATCH";
      }

      const response = await fetch(endpoint, {
        method,
        headers: {
          "Content-Type": "application/json"
        },
        body
      });

      if (response.ok) {
        const user = await response.json();

        window.location.href = `/users/${user.id}`;
      } else {
        await manageErrors(response, errors);
      }
    });
  </script>
{% endblock %}
