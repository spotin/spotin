services:
  database:
    container_name: ${DATABASE_SERVICE}
    image: postgis/postgis:${POSTGIS_IMAGE_VERSION:-latest}
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}

  application:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
    depends_on:
      - database

  traefik:
    image: traefik:${TRAEFIK_IMAGE_VERSION:-latest}
    command:
      - --log.level=ERROR
      - --api=true
      #
      - --providers.docker=true
      - --providers.docker.watch=true
      - --providers.docker.exposedByDefault=false
      #
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      #
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=info@spotin.ch
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/etc/traefik/acme.json
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      - ./traefik-dynamic.yaml:/etc/traefik/traefik-dynamic.yaml
    labels:
      # Traefik
      - traefik.enable=true
      - traefik.docker.network=reverse-proxy
      # Middlewares
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
      # # HTTP
      # - traefik.http.routers.traefik-http.rule=Host(`${TRAEFIK_FQDN}`)
      # - traefik.http.routers.traefik-http.entrypoints=web
      # - traefik.http.routers.traefik-http.service=api@internal
      # - traefik.http.routers.traefik-http.middlewares=redirect-to-https
      # # HTTPS
      # - traefik.http.routers.traefik-https.rule=Host(`${TRAEFIK_FQDN}`)
      # - traefik.http.routers.traefik-https.entrypoints=websecure
      # - traefik.http.routers.traefik-https.service=api@internal
      # - traefik.http.routers.traefik-https.tls=true
      # - traefik.http.routers.traefik-https.tls.certresolver=letsencrypt
